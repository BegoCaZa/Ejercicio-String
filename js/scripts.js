//EJERCICIO 1
//1Ô∏è‚É£ Camila est√° revisando nombres en una lista. Si un nombre tiene m√°s de 6 caracteres, debe marcarlo como "Nombre largo". Si tiene 6 o menos, lo marcar√° como "Nombre corto". Crea una funci√≥n que reciba un nombre y determine su clasificaci√≥n.

const nameLenght=(name)=>{
    if (name.length > 6){
        console.log("Nombre Largo")
    } else console.log("Nombre Corto")
    
}

nameLenght("Macarena")
nameLenght("pepe")

//EJERCICIO 2
//2Ô∏è‚É£ Bego est√° escribiendo un email, pero quiere asegurarse de que el texto termina en un punto. Crea una funci√≥n que reciba una frase y determine si acaba con "." ("Formato correcto") o no ("Falta el punto final").

const verifyIfEmailEndsInDot=(email)=>{
    // if (email.endsWith(".")){
    //     console.log("Formato correcto")
    // } else console.log("Falta el punto final")
    email.endsWith(".") ?console.log("Formato correcto"): console.log("Falta el punto final")

}
verifyIfEmailEndsInDot("corre.")
verifyIfEmailEndsInDot("corre")

//EJERCICIO 3
//3Ô∏è‚É£ Sabrina est√° verificando contrase√±as. Si la contrase√±a tiene m√°s de 8 caracteres y empieza con un n√∫mero, ser√° v√°lida. Si no cumple estas condiciones, ser√° inv√°lida. Crea una funci√≥n que reciba una contrase√±a y determine si es segura.
 const verifyIfPasswordIsSave=(password)=>{
    const numbers ='0123456789'
    // if (password.length>=8 && numbers.includes(password.charAt(0))){
    //     console.log("Contrase√±a v√°lida")
    // }else console.log("Contrase√±a Invalida")
    password.length>8 && numbers.includes(password.charAt(0)) ? console.log("Contrase√±a v√°lida") : console.log("Contrase√±a Invalida")

 }
 verifyIfPasswordIsSave("9contrase√±a")
 verifyIfPasswordIsSave("coea")

 //EJERCICIO 4
 //4Ô∏è‚É£ Macarena est√° revisando la gram√°tica de un texto. Si la primera letra de la frase est√° en may√∫scula y la frase termina con un punto, es correcta. Si no, est√° mal escrita. Crea una funci√≥n que reciba una frase y determine si cumple ambas reglas.

 const verifyIfTextIsWellWritten =(sentence)=>{
    const firstLetter=sentence.charAt(0)
    // if (sentence.endsWith(".") && sentence.includes(firstLetter.toUpperCase())){
    //     console.log('La frase es correcta')
    // } else console.log ('La frase es incorrecta')
    // sentence.endsWith(".") && sentence.includes(firstLetter.toUpperCase()) ? console.log("La frase es correcta") : console.log("La frase es incorrecta")

    sentence.includes(firstLetter.toUpperCase()) ? console.log("La frase es correcta") : console.log("La frase es incorrecta")
 }

 verifyIfTextIsWellWritten("sombreroS.")
 verifyIfTextIsWellWritten("sOmbrero.")
 verifyIfTextIsWellWritten("Sombrero.")
 verifyIfTextIsWellWritten("Sombrero")

 // DUDA! SI FUNCIONA

//EJERCICIO 5
//5Ô∏è‚É£ Abby encontr√≥ un mensaje pintado en la pared con dos palabras. Si ambas palabras tienen la misma cantidad de letras, lo tomar√° como una pista. Si no, lo ignorar√°. Crea una funci√≥n que reciba dos palabras y determine si el mensaje es importante.

const isThisMessageImportant = (wordA,wordB)=>{
    // if (wordA.length===wordB.length){
    //     console.log("Esto es una pista")
    // }else console.log ("Ignora este mensaje")

    wordA.length===wordB.length ? console.log ("Esto es una pista") : console.log("Ignora este mensaje")
}

isThisMessageImportant("sopa","copa")
isThisMessageImportant("soa","copa")



//EJERCICIO 6
//6Ô∏è‚É£ Camila quiere asegurarse de que un n√∫mero de tel√©fono tiene el formato correcto. Debe tener exactamente 9 caracteres. Crea una funci√≥n que reciba un n√∫mero como string y determine si es v√°lido o no.
const isThisNumberCorrect = (number)=>{
    // if(number.length===(9)){
    //     console.log("El n√∫mero es v√°lido")
    // } else console.log("El n√∫mero es inv√°lido")
    number.length===9 ? console.log("El n√∫mero es v√°lido") : console.log ("El n√∫mero es inv√°lido")
}

isThisNumberCorrect("123456789")
isThisNumberCorrect("1234567")

//EJERCICIO 7
//7Ô∏è‚É£ Bego est√° eligiendo un dominio para su nueva web. Si la web termina en ".com", se usar√° para negocios. Si termina en ".org", ser√° para una organizaci√≥n. Si no es ninguno de estos, el dominio no es v√°lido. Crea una funci√≥n que reciba un dominio y determine su clasificaci√≥n.
const verifyEmailAdressUse = (email)=>{
    //tiene que tener @ para se email
    if  (email.includes("@")){
        if (email.endsWith(".org")){
        console.log("Email para una organizaci√≥n");
    } else if (email.endsWith(".com")){
        console.log("Email para una negocio");
        
    }}else{ console.log("El dominio no es v√°lido")}
}

 
verifyEmailAdressUse("begoxchotmail.org")
verifyEmailAdressUse("begoxcho@tmail.org")
verifyEmailAdressUse("begoxchotmail.com")
///DUDA -- como hago para que despu√©s de que detecte que no es @, termine la evaluacion

//EJERCICIO 8 
//8Ô∏è‚É£ Sabrina est√° revisando una lista de palabras. Si una palabra contiene la letra "z", la marcar√° como especial. Si no, ser√° una palabra com√∫n. Crea una funci√≥n que reciba una palabra y determine su categor√≠a.
const doesTheWordHasZ = (word)=>{
    // version larga --word.includes("z") || word.includes("Z")  ? console.log("Es una palabra especial") : console.log("Es una palabra com√∫n")

    word.toLowerCase().includes("z") ? console.log("Es una palabra especial") : console.log("Es una palabra com√∫n")
}


doesTheWordHasZ("zardain")
doesTheWordHasZ("Zardain")
doesTheWordHasZ("Calleja")

//EJERCICIO 9
//9Ô∏è‚É£ Macarena est√° clasificando documentos seg√∫n su urgencia. Si un mensaje contiene la palabra "urgente" en cualquier parte, lo priorizar√°. Si no, ser√° un mensaje normal. Crea una funci√≥n que reciba un mensaje y determine su nivel de prioridad.

const isThisMessageUrgent = (message)=>{
    message.includes("urgente") ? console.log("Mensaje con prioridad") : console.log("Mensaje normal")
    
    // if (message.includes("urgente")){
    //     console.log("Mensaje con prioridad");
    // } else {
    //     console.log("Mensaje normal")
    // }
}

isThisMessageUrgent("Esto es urgente")
isThisMessageUrgent("Esto no lo es")

//EJERCICIO 10
//üîü Abby encontr√≥ una nota con un c√≥digo en una casa abandonada. Si el c√≥digo es un n√∫mero par y tiene exactamente 4 d√≠gitos, puede ser la combinaci√≥n de una caja fuerte. Si es impar o tiene otra longitud, lo descartar√°. Crea una funci√≥n que reciba un c√≥digo y determine si Abby debe investigarlo.


const isThisCodeAPassword = (number)=>{
    const numberToString= number.toString(); //Recorde con el meme que dijiste que existia una forma de pasar un numero a "characters" y lo googolee

    numberToString.length===4 && numberToString%2===0 ? console.log("Puede ser una combinaci√≥n") : console.log("Este no es un c√≥digo")
    // if (numberToString.length===4 && (numberToString%2===0)){
    //     console.log("Puede ser una combinaci√≥n");
    // } else {
    //     console.log("Este no es un c√≥digo")
    // }
}

isThisCodeAPassword("2024")
isThisCodeAPassword("202")
isThisCodeAPassword("2026")

//EJERCICIO 11
//1Ô∏è‚É£1Ô∏è‚É£ Camila est√° revisando invitaciones para un evento. Si el nombre del invitado empieza con "A", "E", "I", "O" o "U", se le asignar√° una mesa especial. Si empieza con otra letra, se le asignar√° una mesa normal. Crea una funci√≥n que reciba un nombre y determine su ubicaci√≥n.
const tableAssignmentForGifts = (name)=>{
    const vowels="AEIOU"

    vowels.includes(name.charAt(0).toUpperCase()) ? console.log("Mesa Especial Yupi") : console.log("Mesa Normal Boo") //le pido que revise si en el primer caracter estan las vocales y si son mayusculas

    // if (vocals.includes(name.charAt(0).toUpperCase())){
    //     console.log("Mesa Especial yupi");
    // }else {
    //     console.log("Mesa Normal boooo")
    // }

}

tableAssignmentForGifts("Andrea")
tableAssignmentForGifts("Renata")

//EJERCICIO 12
//1Ô∏è‚É£2Ô∏è‚É£ Bego est√° verificando si un texto contiene lenguaje ofensivo. Si un mensaje contiene la palabra "tonto" o "feo", se marcar√° como inapropiado. Si no, ser√° aceptado. Crea una funci√≥n que reciba un mensaje y determine su categor√≠a.

const isTheMessageOffensive=(message)=>{
    (message.includes("tonto") || message.includes("feo")) ? console.log("Inapropiado") : console.log("Apropiado")

    // if(message.includes("tonto")|| message.includes("feo")){ //no puedo poner dos palabras dentro del metodo. 
    //     console.log("Inapropiado");
    // }else {
    //     console.log("Apropiado")
    // }
}

isTheMessageOffensive("tonto")
isTheMessageOffensive("eres bonito")
isTheMessageOffensive("eres tonto")

//EJERCICIO 13
//1Ô∏è‚É£3Ô∏è‚É£ Sabrina quiere imprimir etiquetas con iniciales. Crea una funci√≥n que reciba un nombre y un apellido y devuelva sus iniciales en may√∫sculas, separadas por un punto.
const nameTags=(name,surename)=>{
    const inicialName= name.charAt(0).toUpperCase(); //no hay comparativa, asi que solo debe obtener la letra, hacerla mayuscula e imprimirla
    const inicialSurename= surename.charAt(0).toUpperCase();

    console.log (inicialName+"." + inicialSurename);
}

nameTags("Bego","Calleja")

//EJERCICIO 14
//1Ô∏è‚É£4Ô∏è‚É£ Macarena est√° dise√±ando una campa√±a publicitaria. Si el t√≠tulo del anuncio tiene m√°s de 20 caracteres, lo reducir√°. Si tiene 20 o menos, lo usar√° tal cual. Crea una funci√≥n que reciba un t√≠tulo y determine si debe ajustarse.
 const isTheTitleAdjustable=(title)=>{
    (title.length>=20) ? console.log("Debe ajustarse") : console.log ("Se imprime igual")
 }

 isTheTitleAdjustable("zoquete")
 isTheTitleAdjustable("Popocatepetle es un volc√°n en Puebla")

 //EJERCICIO 15
 //1Ô∏è‚É£5Ô∏è‚É£ Abby encontr√≥ una radio funcionando con interferencias. Si la se√±al incluye la palabra "ayuda" o "suministros", significa que alguien est√° pidiendo asistencia. Si no contiene estas palabras, lo ignorar√°. Crea una funci√≥n que reciba un mensaje de radio y determine si Abby debe responder.
const isThisAHelpMessage=(message)=>{
    (message.includes("ayuda") || message.includes("suministros")) ? console.log("JODER, NECESITAN AYUDA!") : console.log("Todo cool, todo chill")
}

isThisAHelpMessage("ayuda")
isThisAHelpMessage("suministros")
isThisAHelpMessage("holis")

//EJERCICIO 16
//1Ô∏è‚É£6Ô∏è‚É£ Camila quiere asegurarse de que los nombres de usuario no contengan espacios. Si un nombre tiene espacios, ser√° inv√°lido. Si no tiene, ser√° aceptado. Crea una funci√≥n que reciba un nombre de usuario y determine su validez.

const userNameValidation=(userName)=>{
    (userName.includes(" ")) ? console.log("Usuario inv√°lido") : console.log("Usuario v√°lido")
}

userNameValidation("nombre")
userNameValidation("tu nombre")

//EJERCICIO 17
//1Ô∏è‚É£7Ô∏è‚É£ Bego est√° registrando nuevas cuentas de clientes. Si un correo electr√≥nico contiene "@" y ".", ser√° v√°lido. Si no tiene alguno de estos elementos, ser√° inv√°lido. Crea una funci√≥n que reciba un email y determine si es correcto.
const accountRegistration=(email)=>{
    email.includes("@") && email.includes(".") ? console.log("Email correcto") : console.log("Email incorrecto")
}

accountRegistration("bego@.")
accountRegistration("bego.")
accountRegistration("bego@")
accountRegistration("bego")

//EJERCICIO 19
//Macarena est√° validando n√∫meros de identificaci√≥n. Si un n√∫mero tiene exactamente 8 caracteres y termina en una letra, ser√° v√°lido. Si no cumple estas condiciones, ser√° inv√°lido. Crea una funci√≥n que reciba un n√∫mero de identificaci√≥n y determine si es correcto.
const idValidation=(numbers)=>{
    const lastLetter="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    lastLetter.includes(numbers.charAt(8).toLowerCase()) && numbers.length===8 ? console.log("Contrase√±a v√°lida") : console.log("Contrase√±a inv√°lida")
}
 idValidation("1234567b")
 idValidation("12347A")
 idValidation("1234")

 //EJERCICIO 20
 //2Ô∏è‚É£0Ô∏è‚É£ Abby encontr√≥ una combinaci√≥n de caja fuerte que parece ser un n√∫mero de 4 d√≠gitos. Quiere probar combinaciones aleatorias hasta encontrar una que termine en 7. Crea una funci√≥n que genere un n√∫mero de 4 d√≠gitos que termine en 7.
const codeGenerator=()=>{
    const combination=Math.floor(Math.random()*(999-100)+100); //que evalue del 999 para que si tenga 3 digitos

    console.log(combination + "7");

}
codeGenerator() //Intente copiar el ejemplo de clase pero nop

//EJERCICIO 21
// Macarena est√° seleccionando un color al azar para una promoci√≥n. Los colores posibles son "Rojo", "Azul", "Verde" y "Amarillo". Crea una funci√≥n que devuelva uno de estos colores de forma aleatoria.

const colorForPromotion =()=>{
    const aleatoryNumber=Math.floor(Math.random()*4); //como son 4 colores, necesito que busque del 0-4
    if (aleatoryNumber ===0){
        console.log("Azul");
    } else if (aleatoryNumber=== 1) {
        console.log("Rojo");
    } else if (aleatoryNumber===2){
        console.log("Verde");
    } else {
        console.log("Amarillo");
    }
}
colorForPromotion()

//EJERCICIO 22 
// 2Ô∏è‚É£2Ô∏è‚É£ Sabrina quiere generar una combinaci√≥n de letras para un c√≥digo de producto. La combinaci√≥n debe tener 3 letras aleatorias en may√∫sculas. Crea una funci√≥n que genere y muestre esta combinaci√≥n.

const lettersPassword=()=>{
    const letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const number1=Math.floor(Math.random()*27);
    const number2=Math.floor(Math.random()*27);
    const number3=Math.floor(Math.random()*27);
    
    console.log(letters.charAt(number1)+ letters.charAt(number2)+letters.charAt(number3));

}
lettersPassword()

//EJERCICIO 23
//2Ô∏è‚É£3Ô∏è‚É£ Bego est√° revisando una lista de verbos para una clase de gram√°tica. Necesita clasificar cada verbo seg√∫n su conjugaci√≥n. Crea una funci√≥n que reciba dos verbos en infinitivo y determine si pertenecen a la primera ("-ar"), segunda ("-er") o tercera ("-ir") conjugaci√≥n. La funci√≥n deber√° imprimir la clasificaci√≥n de cada verbo.

const verbSorting=(verb1,verb2)=>{
    const defineConjugation=(verb)=>{ //para agrupar ambas conjugaciones y no hacerlo doble
        if (verb.endsWith("ar")){
            console.log("Primer conjugaci√≥n");
        } else if (verb.endsWith("er")){
            console.log("Segunda clasificacion");
        } else if (verb.endsWith("ir")){
            console.log("Tercer clasificaci√≥n");
        }
    }
    defineConjugation(verb1);
    defineConjugation(verb2); //les da valor a cada verbo

}
verbSorting("cantar","llorar")
verbSorting("tener","morir")

//EJERCICIO 24
//2Ô∏è‚É£4Ô∏è‚É£ Abby encontr√≥ una caja cerrada con un c√≥digo de 5 n√∫meros. Solo uno de cada 5 intentos abrir√° la caja. Crea una funci√≥n que simule 5 intentos y muestre si en alguno se abre la caja o no.

// const tryToOpenTheBox=()=>{
//     const correctCode=Math.floor(Math.random()*6);

//     if (correctCode===1){
//         console.log("CORRECTO");
//     } else {
//         console.log("INCORRECTO");
//     }

//     if (correctCode===2){
//         console.log("CORRECTO");
//     } else {
//         console.log("INCORRECTO");
//     }

//     if (correctCode===3){
//         console.log("CORRECTO");
//     } else {
//         console.log("INCORRECTO");
//     }

//     if (correctCode===4){
//         console.log("CORRECTO");
//     } else {
//         console.log("INCORRECTO");
//     }

//     if (correctCode===5){
//         console.log("CORRECTO");
//     } else {
//         console.log("INCORRECTO");
//     }
// }

const tryToOpenTheBox =()=>{
    const try1 = Math.random()< 0.2; // evalua la probabilidad 1/5 (probabilidad 20%)
    const try2 = Math.random()< 0.2; // evalua la probabilidad 1/5 (probabilidad 20%)
    const try3 = Math.random()< 0.2; // evalua la probabilidad 1/5 (probabilidad 20%)
    const try4 = Math.random()< 0.2; // evalua la probabilidad 1/5 (probabilidad 20%)
    const try5 = Math.random()< 0.2; // evalua la probabilidad 1/5 (probabilidad 20%)

    if(try1 || try2 || try3 || try4 || try5){
        console.log("CORRECTO");
    } else {
        console.log("INCORRECTO");
    }
}


tryToOpenTheBox();

//EJERCICIO 25
//2Ô∏è‚É£5Ô∏è‚É£ Camila quiere generar una clave secreta para una nueva cuenta. La clave debe tener un n√∫mero aleatorio entre 100 y 999 y una letra aleatoria entre "A" y "Z". Crea una funci√≥n que genere una clave con ese formato.

const generateNewPassword=()=>{
    const letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    const randomLetter=Math.floor(Math.random()*27);
    const randomNumber=Math.floor(Math.random()* (999-100)+100)

    console.log(randomNumber+ letters.charAt(randomLetter))
}

generateNewPassword();

//EJERCICIO 26
//2Ô∏è‚É£6Ô∏è‚É£ Macarena quiere jugar al Euromillones, pero como nunca le toca, ha decidido confiar en el destino. Quiere generar 5 n√∫meros aleatorios entre 1 y 50, asegur√°ndose de que si un n√∫mero es menor que 10, aparezca con un "0" delante. Por ejemplo, un posible resultado ser√≠a: "08 10 33 35 49". Crea una funci√≥n que genere y muestre esta combinaci√≥n de n√∫meros en el formato correcto.

const lotteryNumberGenerator=()=>{
    const aleatoryNumber1=Math.floor(Math.random()* (50-1)+1);
    const aleatoryNumber2=Math.floor(Math.random()* (50-1)+1);
    const aleatoryNumber3=Math.floor(Math.random()* (50-1)+1);
    const aleatoryNumber4=Math.floor(Math.random()* (50-1)+1);
    const aleatoryNumber5=Math.floor(Math.random()* (50-1)+1);
    
    const number1=aleatoryNumber1<10 ? ("0"+ aleatoryNumber1): aleatoryNumber1; //si el numero es menor a 10- agregale 0, si no, dejalo igual
    const number2=aleatoryNumber2<10 ? ("0"+ aleatoryNumber2): aleatoryNumber2;
    const number3=aleatoryNumber3<10 ? ("0"+ aleatoryNumber3): aleatoryNumber3;
    const number4=aleatoryNumber4<10 ? ("0"+ aleatoryNumber4): aleatoryNumber4;
    const number5=aleatoryNumber5<10 ? ("0"+ aleatoryNumber5): aleatoryNumber5;

    console.log(number1,number2,number3,number3,number4,number5);
    // if (number1<10) {
    //     console.log(`0${number1} ${number2} ${number3} ${number4} ${number5}`);
    // }
    // if (number2<10){ 
    //     console.log(`${number1} 0${number2} ${number3} ${number4} ${number5}`);
    // }
    // if (number3<10){
    //     console.log(`${number1} ${number2} 0${number3} ${number4} ${number5}`);
    // }
    // if (number4<10){
    //     console.log(`${number1} ${number2} ${number3} 0${number4} ${number5}`);
    // }
    // if (number5<10){
    //     console.log(`${number1} ${number2} ${number3} ${number4} 0${number5}`);
    // }


}

lotteryNumberGenerator();

//EJERCICIO 27
//2Ô∏è‚É£7Ô∏è‚É£ Sabrina necesita ocultar parte de un n√∫mero de tarjeta de cr√©dito. Dado un n√∫mero de 16 d√≠gitos como string, la funci√≥n debe reemplazar todos los caracteres excepto los √∫ltimos 4 con asteriscos. Por ejemplo, "1234567812345678" debe mostrarse como **********5678.

const hideCardNumbers=(number)=>{
    const last4Numbers = number.slice(-4); //sacar los ultimos 4 digitos
    const asterisk = ("************");

    console.log(asterisk.substring(0,number.length-4)+ last4Numbers)
}

hideCardNumbers("123456781230000")

//2Ô∏è‚É£8Ô∏è‚É£ Camila quiere dividir frases largas en dos partes. Si una frase tiene m√°s de 20 caracteres, debe dividirla en dos partes: los primeros 10 caracteres y el resto, separados por " - ". Si la frase tiene 20 o menos, se devuelve tal cual. Crea una funci√≥n que realice esta divisi√≥n.

const sentenceDivision=(sentance)=>{
    if (sentance.lenght>20){ //detecta si es muy larga
        const part1=sentence.substring(0,10); //hace la primer parte
        const part2=sentence.substring(10); //hace la segunda parte
        
        console.log(part1 + "-" + part2); //imprime estas dos juntas
    } else{
        console.log(sentance);
    }
}

sentenceDivision("Qui√©n es la alumna favorita de Adrian?");
sentenceDivision("Es Bego");

//EJERCICIO 29
//2Ô∏è‚É£9Ô∏è‚É£ Sabrina est√° encriptando mensajes secretos. Sabe que todos los mensajes deben tener 4 letras y quiere que cada letra de una palabra se sustituya por la siguiente en el abecedario (por ejemplo, "hola" se convertir√≠a en "ipmb"). Si la letra es "z" o "Z", debe convertirse en "a" o "A" respectivamente. Crea una funci√≥n que realice esta transformaci√≥n en una palabra.

const messageTranscription=(message)=>{
    const letters ="abcdefghijklmnopqrstuvwxyz"
    // const character1 = letters.charAt(Math.floor(Math.random()*letters.length)); //
    const firstLetterPosition =  letters.indexOf(message.charAt(0)); //yo quiero saber la posicion del abecedario de la primer letra de la palabra
    const firstLetter = firstLetterPosition=== letters.length -1 ? "a": letters.charAt(firstLetterPosition+1); //letters.length -1 es la ultima posicion del abecedario. Le estoy diciendo que si la primer letra, es la ultima del abecedar"z" se convierta a "a"

    const secondLetterPosition =  letters.indexOf(message.charAt(1));
    const secondLetter = secondLetterPosition=== letters.length -1 ? "a": letters.charAt(secondLetterPosition+1);

    const thirdLetterPosition =  letters.indexOf(message.charAt(2));
    const thirdLetter = thirdLetterPosition=== letters.length -1 ? "a": letters.charAt(thirdLetterPosition+1);

    const forthLetterPosition =  letters.indexOf(message.charAt(3));
    const forthLetter = forthLetterPosition=== letters.length -1 ? "a": letters.charAt(forthLetterPosition+1);
   
    console.log(`${firstLetter}${secondLetter}${thirdLetter}${forthLetter}`);
} 

messageTranscription("hola");
//EJERCICO 30
//3Ô∏è‚É£0Ô∏è‚É£ Bego necesita verificar si dos palabras de 4 letras son pal√≠ndromos (es decir, si lee igual de derecha a izquierda y de izquierda a derecha, como "amor" y "roma"). Crea una funci√≥n que determine si dos palabras son pal√≠ndromos.

const areThisWordsPalindromes=(word1,word2)=>{
    // const word1Palindrome= word1.charAt(0)===word1.charAt(3) && word1.charAt(1) === word1.charAt(2); //esto las hace palindromos
    // const word2Palindrome= word2.charAt(0)===word2.charAt(3) && word2.charAt(1) === word2.charAt(2);

    // if (word1Palindrome && word2Palindrome){ //si estas dos sucedes
    //     console.log("Son pal√≠ndromos");
    // } else {
    //     console.log("Alguna palabra no es pal√≠ndromo");
    // }
    if (word1.charAt(0)===word2.charAt(3) && (word1.charAt(3)===word2.charAt(0))){
        console.log("Son pal√≠ndromos")
    } else {
        console.log("No son pal√≠ndormos")
    }
}
areThisWordsPalindromes("amor","roma")
areThisWordsPalindromes("lote","etol")
areThisWordsPalindromes("amot","roma")